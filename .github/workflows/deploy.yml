# .github/workflows/deploy.yml
name: Deploy Blog

on:
  push:
    branches: [main]
    paths:
      - 'mlops-blog/**'  # Only trigger on changes to blog

# Add these permissions for OIDC
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: mlops-blog/package-lock.json

    - name: Install dependencies
      working-directory: mlops-blog
      run: npm ci

    - name: Build Next.js site
      working-directory: mlops-blog
      run: npm run build

    # UPDATED: Use OIDC instead of access keys
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        role-session-name: github-actions-deploy
        aws-region: ${{ vars.AWS_REGION }}

    - name: Sync to S3
      working-directory: mlops-blog
      run: |
        set -e  # Exit on any error
        echo "Syncing static assets..."
        aws s3 sync ./out s3://${{ vars.S3_BUCKET_NAME }} \
          --delete \
          --cache-control "public, max-age=31536000" \
          --exclude "*.html" \
          --exclude "*.xml" \
          --exclude "*.json"

        echo "Syncing dynamic content..."
        aws s3 sync ./out s3://${{ vars.S3_BUCKET_NAME }} \
          --delete \
          --cache-control "public, max-age=0, must-revalidate" \
          --exclude "*" \
          --include "*.html" \
          --include "*.xml" \
          --include "*.json"

    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
    - name: Validate deployment
      run: |
        # Check if S3 sync was successful
        aws s3 ls s3://${{ vars.S3_BUCKET_NAME }}/ --recursive | head -5
        echo "âœ… S3 deployment validated"