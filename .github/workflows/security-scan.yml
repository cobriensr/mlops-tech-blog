# .github/workflows/security-scan.yml
name: Security Scan

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    # Run security scan weekly on Monday at 9am UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # Terraform Security Scanning
  terraform-security:
    name: Terraform Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check if Terraform directory exists
      id: check_terraform
      run: |
        if [ -d "terraform" ]; then
          echo "terraform_exists=true" >> $GITHUB_OUTPUT
          echo "terraform_dir=terraform" >> $GITHUB_OUTPUT
        elif [ -d "infrastructure" ]; then
          echo "terraform_exists=true" >> $GITHUB_OUTPUT
          echo "terraform_dir=infrastructure" >> $GITHUB_OUTPUT
        else
          echo "terraform_exists=false" >> $GITHUB_OUTPUT
          echo "No Terraform directory found"
        fi
    
    - name: Setup Python
      if: steps.check_terraform.outputs.terraform_exists == 'true'
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    # Run Trivy for comprehensive IaC scanning
    - name: Run Trivy on Terraform
      if: steps.check_terraform.outputs.terraform_exists == 'true'
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: '${{ steps.check_terraform.outputs.terraform_dir }}'
        format: 'sarif'
        output: 'trivy-terraform.sarif'
        severity: 'CRITICAL,HIGH'
        hide-progress: true
      continue-on-error: true
    
    - name: Upload Trivy results to GitHub Security
      if: steps.check_terraform.outputs.terraform_exists == 'true'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-terraform.sarif
        category: trivy-terraform
      continue-on-error: true
    
    # Checkov - Multi-cloud security analysis
    - name: Run Checkov
      if: steps.check_terraform.outputs.terraform_exists == 'true'
      uses: bridgecrewio/checkov-action@v12
      with:
        directory: ${{ steps.check_terraform.outputs.terraform_dir }}
        quiet: true
        soft_fail: true
        framework: terraform
        output_format: sarif
        output_file_path: checkov.sarif
        download_external_modules: true
      continue-on-error: true
    
    - name: Upload Checkov results to GitHub Security
      if: steps.check_terraform.outputs.terraform_exists == 'true' && always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: checkov.sarif
        category: checkov
      continue-on-error: true

  # NPM Security Scanning
  npm-security:
    name: NPM Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mlops-blog
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: mlops-blog/package-lock.json
    
    # npm audit with GitHub Security integration
    - name: Run npm audit
      run: |
        npm audit --production --audit-level=high --json > npm-audit.json || true
        
        # Convert npm audit to SARIF format
        npm install -g @microsoft/npm-audit-converter
        npm-audit-converter -i npm-audit.json -o npm-audit.sarif || echo '{"version": "2.1.0", "runs": [{"tool": {"driver": {"name": "npm-audit"}}, "results": []}]}' > npm-audit.sarif
    
    - name: Upload npm audit results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: mlops-blog/npm-audit.sarif
        category: npm-audit
      continue-on-error: true
    
    # OSV Scanner
    - name: Run OSV Scanner
      uses: google/osv-scanner-action@v1.8.4
      with:
        scan-args: |-
          --lockfile=mlops-blog/package-lock.json
          --format=sarif
          --output=osv-results.sarif
      continue-on-error: true
    
    - name: Upload OSV results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: osv-results.sarif
        category: osv-scanner
      continue-on-error: true

  # Code Security Scanning
  code-security:
    name: Code Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better scanning
    
    # Semgrep - Static analysis
    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/typescript
          p/javascript
          p/nextjs
          p/secrets
      continue-on-error: true
    
    # TruffleHog - Secret scanning with proper handling
    - name: Check if TruffleHog should run
      id: check_trufflehog
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "should_run=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "push" ] && [ "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]; then
          echo "should_run=true" >> $GITHUB_OUTPUT
        else
          echo "should_run=false" >> $GITHUB_OUTPUT
          echo "Skipping TruffleHog - no new commits to scan"
        fi
    
    - name: Run TruffleHog
      if: steps.check_trufflehog.outputs.should_run == 'true'
      uses: trufflesecurity/trufflehog@v3.81.9
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --only-verified --max-depth=5
      continue-on-error: true

  # Security Report Summary
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [terraform-security, npm-security, code-security]
    if: always()
    
    steps:
    - name: Create security summary
      run: |
        echo "# 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check job statuses
        if [ "${{ needs.terraform-security.result }}" == "success" ]; then
          echo "✅ **Terraform Security**: Passed" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.terraform-security.result }}" == "skipped" ]; then
          echo "⏭️ **Terraform Security**: Skipped (no Terraform files)" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Terraform Security**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.npm-security.result }}" == "success" ]; then
          echo "✅ **NPM Security**: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **NPM Security**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.code-security.result }}" == "success" ]; then
          echo "✅ **Code Security**: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Code Security**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 View detailed results in:" >> $GITHUB_STEP_SUMMARY
        echo "- [Security tab](../../security) for vulnerability details" >> $GITHUB_STEP_SUMMARY
        echo "- [Code scanning alerts](../../security/code-scanning) for code issues" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "_Scans run on: $(date -u +"%Y-%m-%d %H:%M:%S UTC")_" >> $GITHUB_STEP_SUMMARY